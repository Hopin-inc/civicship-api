name: Deploy to Cloud Run （prd）

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prd
    timeout-minutes: 30

    env:
      # stage
      STAGE: prd
      # GCP settings
      GCP_REGION: ${{ secrets.GCP_REGION }}
      # GCP service account credentials
      SERVICE_ACCOUNT_CREDENTIAL_JSON: ${{ secrets.SERVICE_ACCOUNT_CREDENTIAL_JSON }}
      # DB credentials
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      CLOUD_SQL_CONNECTION_NAME: ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
      # application settings
      ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
      APPLICATION_NAME: ${{ secrets.APPLICATION_NAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: |
          pnpm install
          find node_modules/.pnpm/graphql-query-complexity*/node_modules/ -type f -name "QueryComplexity.js" -exec sed -i 's|graphql/execution/values|graphql/execution/values.js|g' {} \;

    - name: Set up Cloud SQL Proxy
      run: |
          echo '${{ env.SERVICE_ACCOUNT_CREDENTIAL_JSON }}' > credentials.json
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
          ./cloud_sql_proxy -instances=$CLOUD_SQL_CONNECTION_NAME=tcp:5432 -credential_file=credentials.json &
          sleep 10

    - name: pnpm db:generate
      env:
        DATABASE_URL: postgresql://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@localhost:5432/${{ env.DB_NAME }}
      run: pnpm db:generate

    - name: pnpm gql:generate
      run: pnpm gql:generate

    - name: pnpm build
      run: pnpm build

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ env.SERVICE_ACCOUNT_CREDENTIAL_JSON }}

    - name: Configure Docker for GCP Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY }}
        gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev


    - name: Build Docker image
      run: |
        pnpm dotenvx run -- docker build -t ${{ env.ARTIFACT_REGISTRY }}/${{ env.APPLICATION_NAME }}:latest .


    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ env.SERVICE_ACCOUNT_CREDENTIAL_JSON }}

    - name: Push Docker image to Artifact Registry
      run: |
        docker push ${{ env.ARTIFACT_REGISTRY }}/${{ env.APPLICATION_NAME }}:latest

    - name: Deploy to Cloud Run
      id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: ${{ env.APPLICATION_NAME }}
        image: ${{ env.ARTIFACT_REGISTRY }}/${{ env.APPLICATION_NAME }}:latest
        region: ${{ env.GCP_REGION }}