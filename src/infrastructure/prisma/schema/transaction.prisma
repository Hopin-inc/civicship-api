model Transaction {
  id     String            @id @default(cuid())
  reason TransactionReason

  from            String?
  fromWallet      Wallet? @relation("from_wallet", fields: [from], references: [id], onDelete: SetNull)
  fromPointChange Int     @map("from_point_change")
  to              String?
  toWallet        Wallet? @relation("to_wallet", fields: [to], references: [id], onDelete: SetNull)
  toPointChange   Int     @map("to_point_change")

  participationId String?        @map("participation_id")
  participation   Participation? @relation(fields: [participationId], references: [id], onDelete: SetNull)

  ticketStatusHistory TicketStatusHistory?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("t_transactions")
}

enum TransactionReason {
  POINT_ISSUED
  POINT_REWARD
  ONBOARDING
  DONATION
  GRANT
  TICKET_PURCHASED
  TICKET_REFUNDED
}
