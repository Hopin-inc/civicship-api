model Opportunity {
  id String @id @default(cuid())

  publishStatus   PublishStatus @default(PUBLIC) @map("publish_status")
  requireApproval Boolean       @default(false) @map("require_approval")

  title       String
  category    OpportunityCategory
  description String
  body        String?
  image       String?
  files       Json                @default("[]") /// [ArrayOfString]

  pointsToEarn      Int?      @map("points_to_earn")
  feeRequired       Int?      @map("fee_required")
  requiredUtilities Utility[]

  slots OpportunitySlot[]

  articles Article[] @relation("t_opportunities_on_articles")

  createdBy     String @map("created_by")
  createdByUser User   @relation(fields: [createdBy], references: [id], onDelete: SetNull)

  communityId String?    @map("community_id")
  community   Community? @relation(fields: [communityId], references: [id], onDelete: Cascade)

  placeId String? @map("place_id")
  place   Place?  @relation(fields: [placeId], references: [id], onDelete: Restrict)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("t_opportunities")
}

enum OpportunityCategory {
  QUEST
  EVENT
  ACTIVITY
}
