model OpportunitySlot {
  id String @id @default(cuid())

  hostingStatus         OpportunitySlotHostingStatus @default(SCHEDULED) @map("hosting_status")
  capacity              Int?
  remainingCapacityView RemainingCapacityView?

  startsAt DateTime @map("starts_at")
  endsAt   DateTime @map("ends_at")

  opportunityId String      @map("opportunity_id")
  opportunity   Opportunity @relation(fields: [opportunityId], references: [id], onDelete: Cascade)

  reservations Reservation[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("t_opportunity_slots")
}

enum OpportunitySlotHostingStatus {
  SCHEDULED
  CANCELLED
  COMPLETED
}

view RemainingCapacityView {
  slotId            String @id @map("slot_id")
  remainingCapacity Int?   @map("remaining_capacity")

  slot OpportunitySlot @relation(fields: [slotId], references: [id])

  @@map("mv_slot_remaining_capacity")
}
