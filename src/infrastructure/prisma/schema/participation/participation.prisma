model Participation {
  id String @id @default(cuid())

  userId String? @map("user_id")
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  opportunityInvitationHistoryId String?                       @unique @map("opportunity_invitation_history_id")
  opportunityInvitationHistory   OpportunityInvitationHistory? @relation(fields: [opportunityInvitationHistoryId], references: [id])

  opportunitySlotId String?          @map("opportunity_slot_id")
  OpportunitySlot   OpportunitySlot? @relation(fields: [opportunitySlotId], references: [id])

  reservationId String?      @map("application_id")
  reservation   Reservation? @relation(fields: [reservationId], references: [id], onDelete: Cascade)

  communityId String?    @map("community_id")
  community   Community? @relation(fields: [communityId], references: [id], onDelete: SetNull)

  status ParticipationStatus @default(PENDING)
  source Source              @default(INTERNAL)

  description String?
  images      ParticipationImage[]

  statusHistories ParticipationStatusHistory[]
  transactions    Transaction[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("t_participations")
}

enum ParticipationStatus {
  PENDING
  PARTICIPATING
  PARTICIPATED
  NOT_PARTICIPATING
}
