# ------------------------------
# Article Query Definitions
# ------------------------------
extend type Query {
    articlesPublic(
        filter: ArticleFilterInput
        sort: ArticleSortInput
        cursor: String
        first: Int
    ): ArticlesConnection! @complexity(value: 10, multipliers: ["first"])
    articlesCommunityInternal(
        filter: ArticleFilterInput
        sort: ArticleSortInput
        cursor: String
        first: Int
    ): ArticlesConnection! @complexity(value: 10, multipliers: ["first"])
    articlesAll(
        filter: ArticleFilterInput
        sort: ArticleSortInput
        cursor: String
        first: Int
    ): ArticlesConnection! @complexity(value: 10, multipliers: ["first"])
    article(id: ID!): Article
}

# ------------------------------
# Article Connection Type Definitions
# ------------------------------
type ArticlesConnection {
    edges: [ArticleEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type ArticleEdge implements Edge {
    cursor: String!
    node: Article
}

# ------------------------------
# Article Query Input Definitions
# ------------------------------
input ArticleFilterInput {
    keyword: String
    category: ArticleCategory
    publishStatus: [PublishStatus!]
    authors: [ID!]
    relatedUserIds: [ID!]
    communityId: ID
}

input ArticleSortInput {
    createdAt: SortDirection
    publishedAt: SortDirection
}
