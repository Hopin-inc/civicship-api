# ------------------------------
# Opportunity Query Definitions
# ------------------------------
extend type Query {
    opportunities(
        filter: OpportunityFilterInput
        sort: OpportunitySortInput
        cursor: String
        first: Int
    ): OpportunitiesConnection! @complexity(value: 10, multipliers: ["first"])
    opportunity(id: ID!): Opportunity
}

# ------------------------------
# Opportunity Connection Type Definitions
# ------------------------------
type OpportunitiesConnection {
    edges: [OpportunityEdge!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type OpportunityEdge implements Edge {
    cursor: String!
    node: Opportunity
}

# ------------------------------
# Opportunity Query Input Definitions
# ------------------------------
input OpportunityFilterInput {
    category: OpportunityCategory
    publishStatus: PublishStatus

    communityIds: [ID!]
    createdByUserIds: [ID!]
    placeIds: [ID!]
    cityCodes: [ID!]
    articleIds: [ID!]
    requiredUtilityIds: [ID!]
}

input OpportunitySortInput {
    startsAt: SortDirection
    createdAt: SortDirection
}
