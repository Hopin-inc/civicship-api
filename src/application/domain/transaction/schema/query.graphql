# ------------------------------
# Transaction Query Definitions
# ------------------------------
extend type Query {
    transactions(
        filter: TransactionFilterInput
        sort: TransactionSortInput
        cursor: String
        first: Int
    ): TransactionsConnection!
    transaction(id: ID!): Transaction
}

# ------------------------------
# Transaction Connection Type Definitions
# ------------------------------
type TransactionsConnection {
    edges: [TransactionEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type TransactionEdge implements Edge {
    cursor: String!
    node: Transaction
}

# ------------------------------
# Transaction Query Input Definitions
# ------------------------------
input TransactionFilterInput {
    communityId: ID
    reason: TransactionReason

    fromWalletType: WalletType
    toWalletType: WalletType

    fromWalletId: ID
    toWalletId: ID
    fromUserId: ID
    toUserId: ID

    fromUserName: String
    toUserName: String

    fromDidValue: String
    toDidValue: String

    and: [TransactionFilterInput!]
    or: [TransactionFilterInput!]
    not: TransactionFilterInput
}

input TransactionSortInput {
    createdAt: SortDirection
}
