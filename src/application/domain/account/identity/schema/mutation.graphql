# ------------------------------
# User Account Mutation Definitions
# ------------------------------
extend type Mutation {
    userSignUp(input: UserSignUpInput!): CurrentUserPayload

    userDeleteMe(
        permission: CheckIsSelfPermissionInput!
    ): UserDeletePayload
    @authz(rules: [IsSelf])

    linkPhoneAuth(
        input: LinkPhoneAuthInput!
        permission: CheckIsSelfPermissionInput!
    ): LinkPhoneAuthPayload

    storePhoneAuthToken(input: StorePhoneAuthTokenInput!): StorePhoneAuthTokenPayload
    recoverPhoneAuthToken(input: RecoverPhoneAuthTokenInput!): RecoverPhoneAuthTokenPayload
    @authz(rules: [IsSelf])

    identityCheckPhoneUser(
        input: IdentityCheckPhoneUserInput!
    ): IdentityCheckPhoneUserPayload!
}

# ------------------------------
# User Account Input Definitions
# ------------------------------
input UserSignUpInput {
    name: String!
    slug: String
    image: ImageInput

    communityId: ID!

    currentPrefecture: CurrentPrefecture!
    phoneUid: String
    phoneNumber: String
    lineRefreshToken: String
    phoneRefreshToken: String
}

input LinkPhoneAuthInput {
    phoneUid: String!
}

input StorePhoneAuthTokenInput {
    phoneUid: String!
    authToken: String!
    refreshToken: String!
    expiresIn: Int!
}

input IdentityCheckPhoneUserInput {
    communityId: ID!
}

# ------------------------------
# User Account Type Definitions
# ------------------------------
type CurrentUserPayload {
    user: User
}

type PhoneTokenStatusPayload {
    hasValidTokens: Boolean!
    missingTokens: [String!]!
    phoneUid: String
    message: String
}

input RecoverPhoneAuthTokenInput {
    phoneUid: String!
    authToken: String!
    refreshToken: String!
    expiresIn: Int!
}

type RecoverPhoneAuthTokenPayload {
    success: Boolean!
    expiresAt: Datetime
    message: String
}

type UserDeletePayload {
    userId: ID
}

type StorePhoneAuthTokenPayload {
    success: Boolean!
    expiresAt: Datetime
    message: String
}

type IdentityCheckPhoneUserPayload {
    status: PhoneUserStatus!
    user: User
    membership: Membership
}

enum PhoneUserStatus {
    NEW_USER
    EXISTING_SAME_COMMUNITY
    EXISTING_DIFFERENT_COMMUNITY
}
