# ------------------------------
# Query Definitions
# ------------------------------
extend type Query {
    utilities(
        filter: UtilityFilterInput
        sort: UtilitySortInput
        cursor: String
        first: Int
    ): UtilitiesConnection! @complexity(value: 10, multipliers: ["first"])
    utility(
        id: ID!
        permission: CheckCommunityPermissionInput!
    ): Utility
}

# ------------------------------
# Type Definitions for Queries
# ------------------------------
type UtilitiesConnection {
    edges: [UtilityEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type UtilityEdge implements Edge {
    cursor: String!
    node: Utility
}

# ------------------------------
# Input Definitions for Queries
# ------------------------------
input UtilityFilterInput {
    #TODO multi?
    communityId: ID
    status: [PublishStatus!]
}

input UtilitySortInput {
    createdAt: SortDirection
    pointsRequired: SortDirection
}
