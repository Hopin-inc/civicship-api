# ------------------------------
# Ticket Mutation Definitions
# ------------------------------
extend type Mutation {
    ticketPurchase(input: TicketPurchaseInput!): TicketPurchasePayload
    ticketRefund(id: ID!, input: TicketRefundInput!): TicketRefundPayload
}

# ------------------------------
# Ticket Mutation Input Definitions
# ------------------------------
input TicketPurchaseInput {
    walletId: ID!
    utilityId: ID!

    """Used for permission checking."""
    communityId: ID!
}

input TicketRefundInput {
    walletId: ID!

    """Used for permission checking."""
    communityId: ID!
}

# ------------------------------
# Ticket Mutation Success Type Definitions
# ------------------------------
type TicketPurchaseSuccess {
    ticket: Ticket!
}

type TicketRefundSuccess {
    ticket: Ticket!
}

# ------------------------------
# Ticket Mutation Union (Payload) Definitions
# ------------------------------
union TicketPurchasePayload =
    TicketPurchaseSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union TicketRefundPayload =
    TicketRefundSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError
