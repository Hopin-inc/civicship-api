# Queries and Mutations

extend type Query {
    opportunities(
        filter: OpportunityFilterInput
        sort: OpportunitySortInput
        cursor: String
        first: Int
    ): OpportunitiesConnection! @complexity(value: 10, multipliers: ["first"])
    opportunity(id: ID!): Opportunity
}

extend type Mutation {
    opportunityCreate(input: OpportunityCreateInput!): OpportunityCreatePayload
    opportunityDelete(id: ID!): OpportunityDeletePayload
    opportunityEditContent(id: ID!, input: OpportunityEditContentInput!): OpportunityEditContentPayload

    opportunitySetPublishStatus(id: ID!, input: OpportunitySetPublishStatusInput!): OpportunitySetPublishStatusPayload
}

# Type definitions

type Opportunity {
    id: ID!
    title: String!
    description: String
    category: OpportunityCategory!
    publishStatus: PublishStatus!
    requireApproval: Boolean!
    capacity: Int
    pointsPerParticipation: Int!
    image: String
    files: [String!]
    startsAt: Datetime
    endsAt: Datetime

    community: Community!
    createdByUser: User!
    state: State
    city: City!

    participations(first: Int, cursor: String): ParticipationsConnection @complexity(value: 5, multipliers: ["first"])

    createdAt: Datetime!
    updatedAt: Datetime
}