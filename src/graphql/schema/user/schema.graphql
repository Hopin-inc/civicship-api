extend type Query {
    users(
        filter: UserFilterInput
        sort: UserSortInput
        cursor: String
        first: Int
    ): UsersConnection!
    user(id: ID!): User

    currentUser: CurrentUserPayload
}

extend type Mutation {
    userCreate(input: UserCreateInput!): UserCreatePayload
    userDelete(id: ID!): UserDeletePayload
    userUpdateContent(id: ID!, input: UserUpdateContentInput!): UserUpdateContentPayload
    userPublish(id: ID!, input: UserSwitchPrivacyInput!): UserSwitchPrivacyPayload
    userUnpublish(id: ID!, input: UserSwitchPrivacyInput!): UserSwitchPrivacyPayload

    createUser(input: CreateUserInput!): CurrentUserPayload
    deleteUser: CurrentUserPayload
}

# Type definitions

type User {
    id: ID!
    name: String!
    slug: String!
    image: String
    bio: String
    sysRole: SysRole!
    urlWebsite: String
    urlX: String
    urlFacebook: String
    urlInstagram: String
    urlYoutube: String
    urlTiktok: String

    createdAt: Datetime!
    updatedAt: Datetime

    memberships: [Membership!]
    participations: [Participation!]
    opportunitiesCreatedByMe: [Opportunity!]
    wallets: [Wallet!]
    participationStatusChangedByMe: [ParticipationStatusHistory!]
}