# Queries and Mutations

extend type Query {
    targets(
        filter: TargetFilterInput
        sort: TargetSortInput
        cursor: String
        first: Int
    ): TargetsConnection!
    target(id: ID!): Target
}

extend type Mutation {
    createTarget(content: CreateTargetInput!): Target
    deleteTarget(id: ID!): Target
}

# Queries/Mutations-related type definitions

type TargetsConnection {
    edges: [TargetEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type TargetEdge implements Edge {
    cursor: String!
    node: Target
}

input TargetFilterInput {
    keyword: String
    agendaId: Int
}

input TargetSortInput {
    updatedAt: SortDirection
}

input CreateTargetInput {
    name: String!
    value: Float!
    validFrom: String!
    validTo: String!

    organizationId: String!
    groupId: String!
    indexId: String!

    createdAt: String!
    updatedAt: String
}

# Type definitions
type Target {
    id: ID!
    name: String!
    value: Float!
    validFrom: String!
    validTo: String!

    organization: Organization
    group: Group
    index: Index

    createdAt: String!
    updatedAt: String
}