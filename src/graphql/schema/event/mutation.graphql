# Queries/Mutations-related type definitions

input EventPlanInput {
    description: String
    isPublic: Boolean
    images: [String!]
    startsAt: Datetime!
    endsAt: Datetime!
    plannedStartsAt: Datetime
    plannedEndsAt: Datetime

    agendaIds: [Int!]
    cityCodes: [String!]
    skillsets: [Int!]

    organizationIds: [String!]
    groupIds: [String!]
}

input EventUpdateContentInput {
    description: String
    isPublic: Boolean
    images: [String!]
    startsAt: Datetime!
    endsAt: Datetime!
    plannedStartsAt: Datetime
    plannedEndsAt: Datetime

    agendaIds: [Int!]
    cityCodes: [String!]
    skillsets: [Int!]
}

input EventAddGroupInput {
    groupId: String!
}

input EventRemoveGroupInput {
    groupId: String!
}

input EventAddOrganizationInput {
    organizationId: String!
}

input EventRemoveOrganizationInput {
    organizationId: String!
}

# Type definitions

type EventPlanSuccess {
    event: Event
}

type EventDeleteSuccess {
    eventId: ID!
}

type EventUpdateContentSuccess {
    event: Event!
}

type EventUpdatePrivacySuccess {
    event: Event!
}

type EventUpdateGroupSuccess {
    event: Event!
    group: Group!
}

type EventUpdateOrganizationSuccess {
    event: Event!
    organization: Organization!
}

# union definitions

union EventPlanPayload =
    EventPlanSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union EventDeletePayload =
    EventDeleteSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union EventUpdateContentPayload =
    EventUpdateContentSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union EventUpdatePrivacyPayload =
    EventUpdatePrivacySuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union EventUpdateGroupPayload =
    EventUpdateGroupSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union EventUpdateOrganizationPayload =
    EventUpdateOrganizationSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError