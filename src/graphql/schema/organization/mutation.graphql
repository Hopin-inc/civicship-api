# Queries/Mutations-related type definitions

input OrganizationCreateInput {
    name: String!
    entity: String
    entityPosition: EntityPosition
    establishedAt: Datetime

    zipcode: String!
    stateCode: String!
    cityCode: String!
    stateCountryCode: String!
    address1: String!
    address2: String

    image: String
    bio: String
    website: String

    agendaIds: [Int!]
    cityCodes: [String!]

    userIds: [String!]
}

input OrganizationUpdateDefaultInput {
    name: String!
    entity: String
    entityPosition: EntityPosition
    establishedAt: Datetime

    zipcode: String!
    stateCode: String!
    cityCode: String!
    stateCountryCode: String!
    address1: String!
    address2: String
}

input OrganizationUpdateContentInput {
    image: String
    bio: String
    website: String

    agendaIds: [Int!]
    cityCodes: [String!]
}

input OrganizationAddGroupInput {
    groupId: String!
}

input OrganizationRemoveGroupInput {
    groupId: String!
}

input OrganizationAddUserInput {
    userId: String!
}

input OrganizationRemoveUserInput {
    userId: String!
}

input OrganizationAddTargetInput {
    targetId: String!
}

input OrganizationRemoveTargetInput {
    targetId: String!
}

# Type definitions

type OrganizationCreateSuccess {
    organization: Organization
}

type OrganizationDeleteSuccess {
    organizationId: ID!
}

type OrganizationUpdateDefaultSuccess {
    organization: Organization!
}

type OrganizationUpdateContentSuccess {
    organization: Organization!
}

type OrganizationUpdatePrivacySuccess {
    organization: Organization!
}

type OrganizationAddGroupSuccess {
    organization: Organization!
    group: Group!
}

type OrganizationRemoveGroupSuccess {
    organization: Organization!
    group: Group!
}

type OrganizationAddUserSuccess {
    organization: Organization!
    user: User!
}

type OrganizationRemoveUserSuccess {
    organization: Organization!
    user: User!
}

type OrganizationAddTargetSuccess {
    organization: Organization!
    target: Target!
}

type OrganizationRemoveTargetSuccess {
    organization: Organization!
    target: Target!
}

# union definitions

union OrganizationCreatePayload =
    OrganizationCreateSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationDeletePayload =
    OrganizationDeleteSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationUpdateDefaultPayload =
    OrganizationUpdateDefaultSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationUpdateContentPayload =
    OrganizationUpdateContentSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationUpdatePrivacyPayload =
    OrganizationUpdatePrivacySuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationAddGroupPayload =
    OrganizationAddGroupSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationRemoveGroupPayload =
    OrganizationRemoveGroupSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationAddUserPayload =
    OrganizationAddUserSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationRemoveUserPayload =
    OrganizationRemoveUserSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationAddTargetPayload =
    OrganizationAddTargetSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union OrganizationRemoveTargetPayload =
    OrganizationRemoveTargetSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError
