# membership

## input definitions
input MembershipInviteInput {
    userId: String!
    communityId: String!
    role: Role
}

input MembershipSelfJoinInput {
    userId: String!
    communityId: String!
    role: Role
}

## Type definitions

type MembershipInviteSuccess {
    membership: Membership!
}

type MembershipSelfJoinSuccess {
    membership: Membership!
}

type MembershipSetRoleSuccess {
    membership: Membership!
}

type MembershipRemoveSuccess {
    membershipId: String!
}

type MembershipWithdrawSuccess {
    membership: Membership!
}

type MembershipSetInvitationStatusSuccess {
    membership: Membership!
}

## Union definitions

union MembershipInvitePayload =
    MembershipInviteSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union MembershipSelfJoinPayload =
    MembershipSelfJoinSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union MembershipSetRolePayload =
    MembershipSetRoleSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union MembershipRemovePayload =
    MembershipRemoveSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union MembershipWithdrawPayload =
    MembershipWithdrawSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union MembershipSetInvitationStatusPayload =
    MembershipSetInvitationStatusSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError



# wallet

## input definitions

input WalletCreateToCommunityInput {
    communityId: String!
}

input WalletCreateToMemberInput {
    communityId: String!
    userId: String!
}

## type definitions

type WalletCreateSuccess {
    wallet: Wallet!
}

type WalletDeleteSuccess {
    walletId: String!
}

## union definitions

union WalletCreatePayload =
    WalletCreateSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError

union WalletDeletePayload =
    WalletDeleteSuccess |
    InvalidInputValueError |
    AuthError |
    ComplexQueryError