schema {
    query: Query
    mutation: Mutation
}

scalar Datetime

type Query {
    echo: String!
}

type Mutation {
    mutationEcho: String!
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
}

type Paging {
    take: Int!
    skip: Int!
}

interface Edge {
    cursor: String!
}

enum SysRole {
    SYS_ADMIN
    USER
}

enum Role {
    OWNER
    MANAGER
    MEMBER
}

enum SortDirection {
    asc
    desc
}

interface Error {
    message: String!
    path: [String!]!
}

type InvalidInputValueError implements Error {
    message: String!
    path: [String!]!
    fields: [Field]!
}

type AuthError implements Error {
    message: String!
    path: [String!]!
}

type ComplexQueryError implements Error {
    message: String!
    path: [String!]!
}

type Field {
    name: String!
    message: String
}