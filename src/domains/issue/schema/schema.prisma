model Issue {
  id          String  @id @default(cuid())
  description String?
  isPublic    Boolean @default(false) @map("is_public")
  /// [ArrayOfString]
  images      Json    @default("[]")

  skillsets       SkillsetsOnIssues[]
  issueCategories IssueCategoriesOnIssues[]
  groups          IssuesOnGroups[]
  organizations   IssuesOnOrganizations[]
  likes           Like[]
  comments        Comment[]
  activities      Activity[]
  cities          CitiesOnIssues[]
  stat            IssueStatView?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("t_issues")
}

model IssueCategoriesOnIssues {
  issueId         String        @map("issue_id")
  issue           Issue         @relation(fields: [issueId], references: [id], onDelete: Cascade)
  issueCategoryId Int           @map("issue_category_id")
  issueCategory   IssueCategory @relation(fields: [issueCategoryId], references: [id], onDelete: Restrict)

  @@id([issueId, issueCategoryId])
  @@map("m_issue_categories_on_issues")
}

model SkillsetsOnIssues {
  issueId    String   @map("issue_id")
  issue      Issue    @relation(fields: [issueId], references: [id], onDelete: Cascade)
  skillsetId Int      @map("skillset_id")
  skillset   Skillset @relation(fields: [skillsetId], references: [id], onDelete: Restrict)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@id([issueId, skillsetId])
  @@map("t_skillsets_on_issues")
}

model CitiesOnIssues {
  issueId  String @map("issue_id")
  issue    Issue  @relation(fields: [issueId], references: [id], onDelete: Cascade)
  cityCode String @map("city_code")
  city     City   @relation(fields: [cityCode], references: [code], onDelete: Restrict)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@id([issueId, cityCode])
  @@map("t_cities_on_issues")
}

view IssueStatView {
  id              String    @unique
  isPublic        Boolean   @map("is_public")
  startsAt        DateTime  @map("starts_at")
  endsAt          DateTime  @map("ends_at")
  plannedStartsAt DateTime? @map("planned_starts_at")
  plannedEndsAt   DateTime? @map("planned_ends_at")

  issue        Issue @relation(fields: [id], references: [id])
  totalMinutes Int   @map("total_minutes")

  @@map("v_issues_stats")
}
