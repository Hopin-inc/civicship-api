model Event {
  id              String    @id @default(cuid())
  description     String?
  isPublic        Boolean   @default(false) @map("is_public")
  /// [ArrayOfString]
  images          Json      @default("[]")
  startsAt        DateTime  @map("starts_at")
  endsAt          DateTime  @map("ends_at")
  plannedStartsAt DateTime? @map("planned_starts_at")
  plannedEndsAt   DateTime? @map("planned_ends_at")

  agendas       AgendasOnEvents[]
  skillsets     SkillsetsOnEvents[]
  groups        EventsOnGroups[]
  organizations EventsOnOrganizations[]
  applications  Application[]
  likes         Like[]
  comments      Comment[]
  activities    Activity[]
  cities        CitiesOnEvents[]
  stat          EventStatView?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("t_events")
}

model AgendasOnEvents {
  eventId  String @map("event_id")
  event    Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  agendaId Int    @map("agenda_id")
  agenda   Agenda @relation(fields: [agendaId], references: [id], onDelete: Restrict)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@id([eventId, agendaId])
  @@map("t_agendas_on_events")
}

model SkillsetsOnEvents {
  eventId    String   @map("event_id")
  event      Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  skillsetId Int      @map("skillset_id")
  skillset   Skillset @relation(fields: [skillsetId], references: [id], onDelete: Restrict)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@id([eventId, skillsetId])
  @@map("t_skillsets_on_events")
}

model CitiesOnEvents {
  eventId  String @map("event_id")
  event    Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  cityCode String @map("city_code")
  city     City   @relation(fields: [cityCode], references: [code], onDelete: Restrict)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@id([eventId, cityCode])
  @@map("t_cities_on_events")
}

view EventStatView {
  id              String    @unique
  isPublic        Boolean   @map("is_public")
  startsAt        DateTime  @map("starts_at")
  endsAt          DateTime  @map("ends_at")
  plannedStartsAt DateTime? @map("planned_starts_at")
  plannedEndsAt   DateTime? @map("planned_ends_at")

  event        Event @relation(fields: [id], references: [id])
  totalMinutes Int   @map("total_minutes")

  @@map("v_events_stats")
}
