# Queries and Mutations

extend type Query {
    utilityHistories(
        filter: UtilityHistoryFilterInput
        sort: UtilityHistorySortInput
        cursor: String
        first: Int
    ): UtilityHistoriesConnection! @complexity(value: 10, multipliers: ["first"])

    utilityHistory(id: ID!): UtilityHistory
}

# Type definitions

type UtilityHistory {
    id: ID!
    status: UtilityStatus!
    usedAt: Datetime

    wallet: Wallet!
    utility: Utility!
    transaction: Transaction!

    createdAt: Datetime!
    updatedAt: Datetime
}

enum UtilityStatus {
    PURCHASED
    REFUNDED
}