//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table t_users {
  id String [pk]
  name String [not null]
  slug String [not null]
  image String
  bio String
  sysRole SysRole [not null, default: 'USER']
  urlWebsite String
  urlX String
  urlFacebook String
  urlInstagram String
  urlYoutube String
  urlTiktok String
  identities t_identities [not null]
  memberships t_memberships [not null]
  participations t_participations [not null]
  opportunitiesCreatedByMe t_opportunities [not null]
  wallets t_wallets [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  participationStatusChangedByMe t_participation_status_histories [not null]
}

Table t_identities {
  uid String [pk]
  platform IdentityPlatform [not null]
  userId String [not null]
  user t_users [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
}

Table t_communities {
  id String [pk]
  name String [not null]
  pointName String [not null]
  image String
  bio String
  establishedAt DateTime
  website String
  cityCode String [not null]
  city m_cities [not null]
  memberships t_memberships [not null]
  opportunities t_opportunities [not null]
  participations t_participations [not null]
  wallets t_wallets [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  utility t_utilities [not null]
  state m_states
  stateCode String
  stateCountryCode String
}

Table t_memberships {
  userId String [not null]
  user t_users [not null]
  communityId String [not null]
  community t_communities [not null]
  role Role [not null, default: 'MEMBER']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime

  indexes {
    (userId, communityId) [pk]
  }
}

Table t_wallets {
  id String [pk]
  type WalletType [not null, default: 'MEMBER']
  communityId String [not null]
  community t_communities [not null]
  userId String
  user t_users
  currentPointView mv_current_points
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  fromTransactions t_transactions [not null]
  toTransactions t_transactions [not null]
}

Table t_opportunities {
  id String [pk]
  title String [not null]
  description String
  category OpportunityCategory [not null]
  publishStatus PublishStatus [not null, default: 'PUBLIC']
  requireApproval Boolean [not null, default: false]
  capacity Int
  pointsPerParticipation Int [not null]
  image String
  files Json [not null, default: '[]', note: '[ArrayOfString]']
  startsAt DateTime
  endsAt DateTime
  communityId String [not null]
  community t_communities [not null]
  createdBy String [not null]
  createdByUser t_users [not null]
  cityCode String [not null]
  city m_cities [not null]
  participations t_participations [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  state m_states
  stateCode String
  stateCountryCode String
}

Table t_participations {
  id String [pk]
  status ParticipationStatus [not null]
  userId String
  user t_users
  communityId String
  community t_communities
  opportunityId String
  opportunity t_opportunities
  statusHistories t_participation_status_histories [not null]
  transactions t_transactions [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
}

Table t_participation_status_histories {
  id String [pk]
  status ParticipationStatus [not null]
  participationId String [not null]
  participation t_participations [not null]
  createdBy String
  createdByUser t_users
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
}

Table t_utilities {
  id String [pk]
  name String [not null]
  description String
  image String
  pointsRequired Int [not null]
  communityId String [not null]
  community t_communities [not null]
  transactions t_transactions [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
}

Table t_transactions {
  id String [pk]
  from String
  fromWallet t_wallets
  fromPointChange Int
  to String
  toWallet t_wallets
  toPointChange Int
  participationId String
  participation t_participations
  utilityId String
  utility t_utilities
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
}

Table m_cities {
  code String [pk]
  name String [not null]
  stateCode String [not null]
  countryCode String [not null]
  state m_states [not null]
  communities t_communities [not null]
  opportunities t_opportunities [not null]
}

Table m_states {
  code String [not null]
  countryCode String [not null]
  name String [not null]
  cities m_cities [not null]
  communities t_communities [not null]
  opportunities t_opportunities [not null]

  indexes {
    (code, countryCode) [pk]
  }
}

Table mv_current_points {
  walletId String [pk]
  currentPoint Int [not null]
  wallet t_wallets [not null]
}

Enum IdentityPlatform {
  LINE
  FACEBOOK
}

Enum SysRole {
  SYS_ADMIN
  USER
}

Enum Role {
  OWNER
  MANAGER
  MEMBER
}

Enum PublishStatus {
  PUBLIC
  COMMUNITY_INTERNAL
  PRIVATE
}

Enum OpportunityCategory {
  EVENT
  TASK
  CONVERSATION
}

Enum ParticipationStatus {
  INVITED
  APPLIED
  CANCELED
  PARTICIPATING
  NOT_PARTICIPATING
  APPROVED
  DENIED
}

Enum WalletType {
  COMMUNITY
  MEMBER
}

Enum TransactionReason {
  POINT_ISSUED
  PARTICIPATION_APPROVED
  UTILITY_USAGE
  MEMBERSHIP_DELETED
  GIFT
  OTHER
}

Ref: t_identities.userId > t_users.id [delete: Cascade]

Ref: t_communities.cityCode > m_cities.code [delete: Restrict]

Ref: t_communities.(stateCode, stateCountryCode) > m_states.(code, countryCode)

Ref: t_memberships.userId > t_users.id [delete: Cascade]

Ref: t_memberships.communityId > t_communities.id [delete: Cascade]

Ref: t_wallets.communityId > t_communities.id [delete: Cascade]

Ref: t_wallets.userId > t_users.id [delete: Set Null]

Ref: t_opportunities.communityId > t_communities.id

Ref: t_opportunities.createdBy > t_users.id [delete: Set Null]

Ref: t_opportunities.cityCode > m_cities.code [delete: Restrict]

Ref: t_opportunities.(stateCode, stateCountryCode) > m_states.(code, countryCode)

Ref: t_participations.userId > t_users.id [delete: Set Null]

Ref: t_participations.communityId > t_communities.id [delete: Set Null]

Ref: t_participations.opportunityId > t_opportunities.id [delete: Set Null]

Ref: t_participation_status_histories.participationId > t_participations.id [delete: Cascade]

Ref: t_participation_status_histories.createdBy > t_users.id [delete: Set Null]

Ref: t_utilities.communityId > t_communities.id [delete: Cascade]

Ref: t_transactions.from > t_wallets.id [delete: Set Null]

Ref: t_transactions.to > t_wallets.id [delete: Set Null]

Ref: t_transactions.participationId > t_participations.id [delete: Set Null]

Ref: t_transactions.utilityId > t_utilities.id [delete: Set Null]

Ref: m_cities.(stateCode, countryCode) > m_states.(code, countryCode) [delete: Restrict]

Ref: mv_current_points.walletId - t_wallets.id